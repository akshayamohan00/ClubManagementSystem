/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package student_management_system;

import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author ADMIN
 */
public class ViewEventsToJoinFrame extends javax.swing.JFrame {

    /**
     * Creates new form ViewEventsToJoinFrame
     */
    public ViewEventsToJoinFrame() {
        initComponents();
    }
    
    public ViewEventsToJoinFrame(String id,Boolean admin,Connection conn) {
        this.id = id;
        this.admin = admin;
        this.conn = conn;
        emap = new HashMap();
        cmap = new HashMap();
        initComponents();
        
        
        refresh();
        if(!admin) {
            insertButton.setVisible(false);
            deleteButton.setVisible(false);
            updateButton.setVisible(false);
            refreshButton.setVisible(false);
            
        }
    }   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        eventsTable = new javax.swing.JTable();
        insertButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        joinButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("VIEW EVENTS");

        eventsTable.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        eventsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Club Name", "Event Name", "Description", "Date", "Time", "Venue", "Attending"
            }
        ));
        eventsTable.setRowHeight(30);
        jScrollPane1.setViewportView(eventsTable);

        insertButton.setText("Insert");
        insertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        refreshButton.setText("Refresh");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        joinButton.setText("Join");
        joinButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                joinButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(201, 201, 201)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(230, 230, 230))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(insertButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(joinButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)))
                .addComponent(refreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(242, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(38, 38, 38)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1123, Short.MAX_VALUE)
                    .addGap(38, 38, 38)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 445, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insertButton)
                    .addComponent(deleteButton)
                    .addComponent(updateButton)
                    .addComponent(refreshButton)
                    .addComponent(joinButton))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(48, 48, 48)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(92, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        // TODO add your handling code here:
        refresh();
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        
        int row = eventsTable.getSelectedRow();
        
        if(row==-1)
            JOptionPane.showMessageDialog(this,"Select An Event To Delete!");
        else {
            try {
                String sql = "delete from Event where EventID=?";
                ps = conn.prepareStatement(sql);
                ps.setString(1,emap.get(row));
                ps.executeQuery();
                
                JOptionPane.showMessageDialog(this,"Deleted!");
                refresh();
            }
            catch(SQLException e) {
                JOptionPane.showMessageDialog(this,e);
            }
        }
            
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
        
        int row = eventsTable.getSelectedRow();
        
        if(row==-1) 
            JOptionPane.showMessageDialog(this, "Choose Am Event To Update!");
        else
            new UpdateEventFrame(emap.get(row),conn).setVisible(true);
    }//GEN-LAST:event_updateButtonActionPerformed

    private void insertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertButtonActionPerformed
        // TODO add your handling code here:
        new InsertEventFrame(id,conn).setVisible(true);
    }//GEN-LAST:event_insertButtonActionPerformed

    private void joinButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_joinButtonActionPerformed
        // TODO add your handling code here:
        
        int row = eventsTable.getSelectedRow();
        
        if(row==-1) {
            JOptionPane.showMessageDialog(this,"Select An Event To Attend!");
        }
        else {
            try {
                String sql = "insert into Attendees values(?,?)";
                ps = conn.prepareStatement(sql);
                ps.setString(1, emap.get(row));
                ps.setString(2,id);
                ps.executeQuery();
                
                JOptionPane.showMessageDialog(this,"Successfully Joined!");
                refresh();
            }
            catch(SQLException e) {
                JOptionPane.showMessageDialog(this,e);
            }
        }
    }//GEN-LAST:event_joinButtonActionPerformed
    
    
    private void refresh() {
        try {
            conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:orcl", "system", "1234");
            DefaultTableModel model = (DefaultTableModel) eventsTable.getModel();
            int rows = model.getRowCount();
            for (int i = rows - 1; i >= 0; i--) {
                model.removeRow(i);
            }
            String sql;
            if(admin)
                sql = "select c.ClubName,e.EventName,e.Description,e.EventDate,e.EventTime,e.Venue,e.AttendeesCount,e.EventID from Event e,Club c where c.ClubID=e.ClubID";
            else
                sql = "select c.ClubName,e.EventName,e.Description,e.EventDate,e.EventTime,e.Venue,e.AttendeesCount,e.EventID from Event e,Club c where c.ClubID=e.ClubID and e.EventID not in (select EventID from Attendees where StudentID=?)";
            ps = conn.prepareStatement(sql);
            if(!admin)
                ps.setString(1, id);
            rs = ps.executeQuery();
            int ct = 0;
            while (rs.next()) {
                String clubname = rs.getString(1);
                String eventname = rs.getString(2);
                String desc = rs.getString(3);
                Date date = rs.getDate(4);
                SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
                Integer time = rs.getInt(5);
                String venue = rs.getString(6);
                Integer act = rs.getInt(7);
                String eventid = rs.getString(8);
                emap.put(ct++,eventid);
                model.addRow(new Object[]{clubname, eventname, desc, sdf.format(date), time, venue, act});
            }
            eventsTable.setModel(model);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewEventsToJoinFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewEventsToJoinFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewEventsToJoinFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewEventsToJoinFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewEventsToJoinFrame().setVisible(true);
            }
        });
    }
    
    String id;
    Connection conn;
    ResultSet rs;
    PreparedStatement ps;
    Boolean admin;
    HashMap<Integer,String> emap;
    HashMap<String,String> cmap;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteButton;
    private javax.swing.JTable eventsTable;
    private javax.swing.JButton insertButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton joinButton;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
