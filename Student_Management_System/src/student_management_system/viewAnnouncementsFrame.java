/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package student_management_system;

import java.sql.*;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ADMIN
 */
public class viewAnnouncementsFrame extends javax.swing.JFrame {

    /**
     * Creates new form viewAnnouncementsFrame
     */
    public viewAnnouncementsFrame() {
        initComponents();
    }
    
    
    public viewAnnouncementsFrame(String id,Boolean admin, Connection conn) {
        this.id = id;
        this.admin = admin;
        this.conn = conn;
        hmap = new HashMap();
        initComponents();
        refresh();
        if(!admin){
            this.updateButton.setVisible(false);
            this.deleteButton.setVisible(false);
            this.insertButton.setVisible(false);
            this.refreshButton.setVisible(false);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        announcementsTable = new javax.swing.JTable();
        insertButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        titleLabel.setText("ANNOUNCEMENTS");

        announcementsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Club", "Title", "Description"
            }
        ));
        announcementsTable.setRowHeight(20);
        jScrollPane1.setViewportView(announcementsTable);
        if (announcementsTable.getColumnModel().getColumnCount() > 0) {
            announcementsTable.getColumnModel().getColumn(0).setResizable(false);
            announcementsTable.getColumnModel().getColumn(0).setPreferredWidth(10);
            announcementsTable.getColumnModel().getColumn(1).setResizable(false);
            announcementsTable.getColumnModel().getColumn(1).setPreferredWidth(10);
            announcementsTable.getColumnModel().getColumn(2).setResizable(false);
            announcementsTable.getColumnModel().getColumn(2).setPreferredWidth(450);
        }

        insertButton.setText("Insert");
        insertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        refreshButton.setText("Refresh");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addGap(27, 27, 27))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(287, 287, 287)
                        .addComponent(titleLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(170, 170, 170)
                        .addComponent(insertButton)
                        .addGap(59, 59, 59)
                        .addComponent(deleteButton)
                        .addGap(50, 50, 50)
                        .addComponent(updateButton)
                        .addGap(55, 55, 55)
                        .addComponent(refreshButton)))
                .addContainerGap(200, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insertButton)
                    .addComponent(deleteButton)
                    .addComponent(updateButton)
                    .addComponent(refreshButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        int row = announcementsTable.getSelectedRow();
        
        if(row==-1) {
            JOptionPane.showMessageDialog(this, "Select An Announcement To Delete!");
            return;
        }
        else {
            try {
                String sql = "delete from Announcement where AnnouncementID=?";
                ps = conn.prepareStatement(sql);
                ps.setString(1, hmap.get(row));
                ps.executeQuery();

                JOptionPane.showMessageDialog(this, "Deleted!");
                refresh();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, e);
            }
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        // TODO add your handling code here:
        refresh();
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
        int row = announcementsTable.getSelectedRow();
        
        if(row==-1){
            JOptionPane.showMessageDialog(this, "Select An Announcement To Update!");
        }
        else
            new UpdateAnnouncementFrame(hmap.get(row),conn).setVisible(true);
    }//GEN-LAST:event_updateButtonActionPerformed

    private void insertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertButtonActionPerformed
        // TODO add your handling code here:
        new InsertAnnouncementFrame(id,conn).setVisible(true);
    }//GEN-LAST:event_insertButtonActionPerformed
    
    private void refresh() {
        DefaultTableModel model = (DefaultTableModel) announcementsTable.getModel();
        int rows = model.getRowCount();
        for (int i = rows - 1; i >= 0; i--) {
            model.removeRow(i);
        }
        try {
            String sql = "select a.AnnouncementID,c.ClubName,a.AName,a.Description from Announcement a,Club c where c.ClubID=a.ClubID and a.ClubID in (select ClubID from Members where StudentID=?)";
            ps = conn.prepareStatement(sql);
            ps.setString(1, id);
            rs = ps.executeQuery();
            int ct = 0;
            while (rs.next()) {
                String aid = rs.getString(1);
                String cname = rs.getString(2);
                String aname = rs.getString(3);
                String desc = rs.getString(4);

                hmap.put(ct++, aid);
                model.addRow(new Object[]{cname, aname, desc});
            }
            announcementsTable.setModel(model);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(viewAnnouncementsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(viewAnnouncementsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(viewAnnouncementsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(viewAnnouncementsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new viewAnnouncementsFrame().setVisible(true);
            }
        });
    }
    
    String id;
    HashMap<Integer,String> hmap;
    Connection conn;
    ResultSet rs;
    PreparedStatement ps;
    Boolean admin;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable announcementsTable;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton insertButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refreshButton;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
